/* eslint-disable */
// @ts-nocheck
/* prettier-ignore */
/* oxlint-disable */
// biome-ignore lint: disable
// Generated by elegant-router
// Read more: https://github.com/soybeanjs/elegant-router

export {}

declare module "vue-router" {
  type RouteNamedMap = import("vue-router/auto-routes").RouteNamedMap;

  export interface TypesConfig {
    RouteNamedMap: RouteNamedMap;
  }
}

declare module "vue-router/auto-routes" {
  import type { RouteParamsRawGeneric, RouteParamsGeneric, RouteMeta, RouteRecordInfo, ParamValue, ParamValueZeroOrOne } from "vue-router";

  /**
   * route named map
  */
  export interface RouteNamedMap {
    "Root": RouteRecordInfo<"Root", "/", Record<never, never>, Record<never, never>>;
    "NotFound": RouteRecordInfo<"NotFound", "/:pathMatch(.*)*", Record<never, never>, Record<never, never>>;
    "_builtin403": RouteRecordInfo<"_builtin403", "/_builtin/403", Record<never, never>, Record<never, never>>;
    "_builtin404": RouteRecordInfo<"_builtin404", "/_builtin/404", Record<never, never>, Record<never, never>>;
    "_builtin500": RouteRecordInfo<"_builtin500", "/_builtin/500", Record<never, never>, Record<never, never>>;
    "_builtinIframePageUrl": RouteRecordInfo<"_builtinIframePageUrl", "/_builtin/iframe-page/:url", { url: ParamValue<true> }, { url: ParamValue<false> }>;
    "_builtinLogin": RouteRecordInfo<"_builtinLogin", "/_builtin/login", Record<never, never>, Record<never, never>>;
    "About": RouteRecordInfo<"About", "/about", Record<never, never>, Record<never, never>>;
    "AlovaRequest": RouteRecordInfo<"AlovaRequest", "/alova/request", Record<never, never>, Record<never, never>>;
    "AlovaScenes": RouteRecordInfo<"AlovaScenes", "/alova/scenes", Record<never, never>, Record<never, never>>;
    "AlovaUser": RouteRecordInfo<"AlovaUser", "/alova/user", Record<never, never>, Record<never, never>>;
    "FunctionHideChildOne": RouteRecordInfo<"FunctionHideChildOne", "/function/hide-child/one", Record<never, never>, Record<never, never>>;
    "FunctionHideChildThree": RouteRecordInfo<"FunctionHideChildThree", "/function/hide-child/three", Record<never, never>, Record<never, never>>;
    "FunctionHideChildTwo": RouteRecordInfo<"FunctionHideChildTwo", "/function/hide-child/two", Record<never, never>, Record<never, never>>;
    "FunctionMultiTab": RouteRecordInfo<"FunctionMultiTab", "/function/multi-tab", Record<never, never>, Record<never, never>>;
    "FunctionRequest": RouteRecordInfo<"FunctionRequest", "/function/request", Record<never, never>, Record<never, never>>;
    "FunctionSuperPage": RouteRecordInfo<"FunctionSuperPage", "/function/super-page", Record<never, never>, Record<never, never>>;
    "FunctionTab": RouteRecordInfo<"FunctionTab", "/function/tab", Record<never, never>, Record<never, never>>;
    "FunctionToggleAuth": RouteRecordInfo<"FunctionToggleAuth", "/function/toggle-auth", Record<never, never>, Record<never, never>>;
    "Home": RouteRecordInfo<"Home", "/home", Record<never, never>, Record<never, never>>;
    "ManageMenu": RouteRecordInfo<"ManageMenu", "/manage/menu", Record<never, never>, Record<never, never>>;
    "ManageRole": RouteRecordInfo<"ManageRole", "/manage/role", Record<never, never>, Record<never, never>>;
    "ManageUser": RouteRecordInfo<"ManageUser", "/manage/user", Record<never, never>, Record<never, never>>;
    "ManageUserDetailId": RouteRecordInfo<"ManageUserDetailId", "/manage/user-detail/:id", { id: ParamValue<true> }, { id: ParamValue<false> }>;
    "MultiMenuFirstChild": RouteRecordInfo<"MultiMenuFirstChild", "/multi-menu/first_child", Record<never, never>, Record<never, never>>;
    "MultiMenuSecondChildHome": RouteRecordInfo<"MultiMenuSecondChildHome", "/multi-menu/second_child_home", Record<never, never>, Record<never, never>>;
    "PluginBarcode": RouteRecordInfo<"PluginBarcode", "/plugin/barcode", Record<never, never>, Record<never, never>>;
    "PluginChartsAntv": RouteRecordInfo<"PluginChartsAntv", "/plugin/charts/antv", Record<never, never>, Record<never, never>>;
    "PluginChartsEcharts": RouteRecordInfo<"PluginChartsEcharts", "/plugin/charts/echarts", Record<never, never>, Record<never, never>>;
    "PluginChartsVchart": RouteRecordInfo<"PluginChartsVchart", "/plugin/charts/vchart", Record<never, never>, Record<never, never>>;
    "PluginCopy": RouteRecordInfo<"PluginCopy", "/plugin/copy", Record<never, never>, Record<never, never>>;
    "PluginEditorMarkdown": RouteRecordInfo<"PluginEditorMarkdown", "/plugin/editor/markdown", Record<never, never>, Record<never, never>>;
    "PluginEditorQuill": RouteRecordInfo<"PluginEditorQuill", "/plugin/editor/quill", Record<never, never>, Record<never, never>>;
    "PluginExcel": RouteRecordInfo<"PluginExcel", "/plugin/excel", Record<never, never>, Record<never, never>>;
    "PluginGanttDhtmlx": RouteRecordInfo<"PluginGanttDhtmlx", "/plugin/gantt/dhtmlx", Record<never, never>, Record<never, never>>;
    "PluginGanttVtable": RouteRecordInfo<"PluginGanttVtable", "/plugin/gantt/vtable", Record<never, never>, Record<never, never>>;
    "PluginIcon": RouteRecordInfo<"PluginIcon", "/plugin/icon", Record<never, never>, Record<never, never>>;
    "PluginMap": RouteRecordInfo<"PluginMap", "/plugin/map", Record<never, never>, Record<never, never>>;
    "PluginPdf": RouteRecordInfo<"PluginPdf", "/plugin/pdf", Record<never, never>, Record<never, never>>;
    "PluginPinyin": RouteRecordInfo<"PluginPinyin", "/plugin/pinyin", Record<never, never>, Record<never, never>>;
    "PluginPrint": RouteRecordInfo<"PluginPrint", "/plugin/print", Record<never, never>, Record<never, never>>;
    "PluginSwiper": RouteRecordInfo<"PluginSwiper", "/plugin/swiper", Record<never, never>, Record<never, never>>;
    "PluginTablesVtable": RouteRecordInfo<"PluginTablesVtable", "/plugin/tables/vtable", Record<never, never>, Record<never, never>>;
    "PluginTypeit": RouteRecordInfo<"PluginTypeit", "/plugin/typeit", Record<never, never>, Record<never, never>>;
    "PluginVideo": RouteRecordInfo<"PluginVideo", "/plugin/video", Record<never, never>, Record<never, never>>;
    "UserCenter": RouteRecordInfo<"UserCenter", "/user-center", Record<never, never>, Record<never, never>>
  }
}
